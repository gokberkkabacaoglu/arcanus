%!PS-Adobe-2.0 EPSF-2.0
%%Title: sample_means_fm.eps
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Tue Aug 14 13:07:39 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (sample_means_fm.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (rhys)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Aug 14 13:07:39 2012)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
2.000 UL
LTb
1008 554 M
88 0 V
3284 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 864 554 M
[ [(Helvetica) 240.0 0.0 true true 0 (-2)]
] -80.0 MRshow
2.000 UL
LTb
1008 1141 M
88 0 V
3284 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 864 1141 M
[ [(Helvetica) 240.0 0.0 true true 0 (0)]
] -80.0 MRshow
2.000 UL
LTb
1008 1727 M
88 0 V
3284 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 864 1727 M
[ [(Helvetica) 240.0 0.0 true true 0 (2)]
] -80.0 MRshow
2.000 UL
LTb
1008 2314 M
88 0 V
3284 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 864 2314 M
[ [(Helvetica) 240.0 0.0 true true 0 (4)]
] -80.0 MRshow
2.000 UL
LTb
1008 2901 M
88 0 V
3284 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 864 2901 M
[ [(Helvetica) 240.0 0.0 true true 0 (6)]
] -80.0 MRshow
2.000 UL
LTb
1008 3488 M
88 0 V
3284 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 864 3488 M
[ [(Helvetica) 240.0 0.0 true true 0 (8)]
] -80.0 MRshow
2.000 UL
LTb
1008 4074 M
88 0 V
3284 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 864 4074 M
[ [(Helvetica) 240.0 0.0 true true 0 (10)]
] -80.0 MRshow
2.000 UL
LTb
1008 4661 M
88 0 V
3284 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 864 4661 M
[ [(Helvetica) 240.0 0.0 true true 0 (12)]
] -80.0 MRshow
2.000 UL
LTb
1008 554 M
0 88 V
0 4019 R
0 -88 V
stroke
0.00 0.00 0.00 C 1008 314 M
[ [(Helvetica) 240.0 0.0 true true 0 (0)]
] -80.0 MCshow
2.000 UL
LTb
1774 554 M
0 88 V
0 4019 R
0 -88 V
stroke
0.00 0.00 0.00 C 1774 314 M
[ [(Helvetica) 240.0 0.0 true true 0 (50)]
] -80.0 MCshow
2.000 UL
LTb
2541 554 M
0 88 V
0 4019 R
0 -88 V
stroke
0.00 0.00 0.00 C 2541 314 M
[ [(Helvetica) 240.0 0.0 true true 0 (100)]
] -80.0 MCshow
2.000 UL
LTb
3307 554 M
0 88 V
0 4019 R
0 -88 V
stroke
0.00 0.00 0.00 C 3307 314 M
[ [(Helvetica) 240.0 0.0 true true 0 (150)]
] -80.0 MCshow
2.000 UL
LTb
4073 554 M
0 88 V
0 4019 R
0 -88 V
stroke
0.00 0.00 0.00 C 4073 314 M
[ [(Helvetica) 240.0 0.0 true true 0 (200)]
] -80.0 MCshow
2.000 UL
LTb
2.000 UL
LTb
1008 4661 N
0 -4107 V
3372 0 V
0 4107 V
-3372 0 V
Z stroke
0.00 0.00 0.00 C 312 2607 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (Normalized by utau2)]
] -80.0 MCshow
grestore
LTb
0.00 0.00 0.00 C 2694 -46 M
[ [(Helvetica) 240.0 0.0 true true 0 (yplus)]
] -80.0 MCshow
LTb
1.000 UP
2.000 UL
LTb
% Begin plot #1
4.000 UL
LT0
0.00 0.00 1.00 C LCb setrgbcolor
3309 4478 M
[ [(Helvetica) 240.0 0.0 true true 0 (u''u'')]
] -80.0 MRshow
LT0
0.00 0.00 1.00 C 3453 4478 M
639 0 V
1008 1141 M
3 2 V
7 15 V
11 52 V
15 122 V
19 226 V
23 356 V
28 481 V
30 496 V
32 453 V
33 366 V
36 259 V
38 151 V
40 53 V
42 -29 V
44 -89 V
47 -132 V
50 -157 V
52 -171 V
54 -176 V
58 -172 V
60 -165 V
64 -156 V
66 -143 V
70 -132 V
73 -120 V
75 -109 V
80 -97 V
82 -87 V
85 -80 V
89 -74 V
92 -69 V
95 -64 V
98 -58 V
102 -53 V
104 -49 V
107 -46 V
109 -45 V
112 -42 V
115 -41 V
116 -38 V
119 -34 V
120 -32 V
122 -29 V
122 -25 V
124 -20 V
125 -13 V
125 -6 V
59 0 V
% End plot #1
% Begin plot #2
stroke
LT0
0.00 0.50 0.00 C LCb setrgbcolor
3309 4238 M
[ [(Helvetica) 240.0 0.0 true true 0 (v''v'')]
] -80.0 MRshow
LT0
0.00 0.50 0.00 C 3453 4238 M
639 0 V
1008 1141 M
3 0 V
7 0 V
11 0 V
15 0 V
19 0 V
23 1 V
28 3 V
30 4 V
32 6 V
33 8 V
36 10 V
38 13 V
40 15 V
42 17 V
44 18 V
47 19 V
50 20 V
52 20 V
54 18 V
58 18 V
60 16 V
64 13 V
66 12 V
70 9 V
73 6 V
75 5 V
80 2 V
82 0 V
85 -2 V
89 -3 V
92 -4 V
95 -6 V
98 -6 V
102 -7 V
104 -8 V
107 -8 V
109 -8 V
112 -8 V
115 -7 V
116 -7 V
119 -7 V
120 -5 V
122 -5 V
122 -4 V
124 -3 V
125 -2 V
125 0 V
59 0 V
% End plot #2
% Begin plot #3
stroke
LT0
1.00 0.00 0.00 C LCb setrgbcolor
3309 3998 M
[ [(Helvetica) 240.0 0.0 true true 0 (w''w'')]
] -80.0 MRshow
LT0
1.00 0.00 0.00 C 3453 3998 M
639 0 V
1008 1141 M
3 0 V
7 2 V
11 7 V
15 14 V
19 22 V
23 27 V
28 33 V
30 33 V
32 32 V
33 32 V
36 32 V
38 29 V
40 28 V
42 25 V
44 21 V
47 20 V
50 16 V
52 14 V
54 11 V
58 9 V
60 7 V
64 4 V
66 2 V
70 -1 V
73 -3 V
75 -6 V
80 -8 V
82 -9 V
85 -10 V
89 -12 V
92 -13 V
95 -15 V
98 -15 V
102 -17 V
104 -17 V
107 -18 V
109 -17 V
112 -16 V
115 -15 V
116 -15 V
119 -13 V
120 -12 V
122 -9 V
122 -8 V
124 -6 V
125 -4 V
125 -2 V
59 0 V
% End plot #3
% Begin plot #4
stroke
LT0
0.00 0.75 0.75 C LCb setrgbcolor
3309 3758 M
[ [(Helvetica) 240.0 0.0 true true 0 (u''v'')]
] -80.0 MRshow
LT0
0.00 0.75 0.75 C 3453 3758 M
639 0 V
1008 1141 M
3 0 V
7 0 V
11 -1 V
15 -1 V
19 -4 V
23 -9 V
28 -17 V
30 -24 V
32 -29 V
33 -31 V
36 -31 V
38 -29 V
40 -25 V
42 -22 V
44 -17 V
47 -14 V
50 -10 V
52 -7 V
54 -4 V
58 -2 V
60 0 V
64 2 V
66 3 V
70 5 V
73 6 V
75 6 V
80 7 V
82 8 V
85 9 V
89 10 V
92 10 V
95 11 V
98 11 V
102 12 V
104 12 V
107 12 V
109 12 V
112 13 V
115 14 V
116 13 V
119 14 V
120 13 V
122 14 V
122 14 V
124 14 V
125 14 V
125 14 V
59 7 V
% End plot #4
% Begin plot #5
stroke
LT0
0.75 0.00 0.75 C LCb setrgbcolor
3309 3518 M
[ [(Helvetica) 240.0 0.0 true true 0 (k)]
] -80.0 MRshow
LT0
0.75 0.00 0.75 C 3453 3518 M
639 0 V
1008 1141 M
3 1 V
7 9 V
11 29 V
15 68 V
19 124 V
23 193 V
28 257 V
30 267 V
32 245 V
33 204 V
36 150 V
38 97 V
40 47 V
42 7 V
44 -25 V
47 -46 V
50 -61 V
52 -69 V
54 -72 V
58 -73 V
60 -72 V
64 -69 V
66 -65 V
70 -62 V
73 -58 V
75 -55 V
80 -51 V
82 -48 V
85 -46 V
89 -45 V
92 -43 V
95 -42 V
98 -40 V
102 -38 V
104 -37 V
107 -36 V
109 -35 V
112 -33 V
115 -32 V
116 -30 V
119 -27 V
120 -25 V
122 -21 V
122 -19 V
124 -14 V
125 -9 V
125 -4 V
59 0 V
% End plot #5
1.000 UP
stroke
2.000 UL
LTb
grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
2.000 UL
LTb
5950 554 M
88 0 V
3285 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 5806 554 M
[ [(Helvetica) 240.0 0.0 true true 0 (0)]
] -80.0 MRshow
2.000 UL
LTb
5950 1067 M
88 0 V
3285 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 5806 1067 M
[ [(Helvetica) 240.0 0.0 true true 0 (0.02)]
] -80.0 MRshow
2.000 UL
LTb
5950 1581 M
88 0 V
3285 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 5806 1581 M
[ [(Helvetica) 240.0 0.0 true true 0 (0.04)]
] -80.0 MRshow
2.000 UL
LTb
5950 2094 M
88 0 V
3285 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 5806 2094 M
[ [(Helvetica) 240.0 0.0 true true 0 (0.06)]
] -80.0 MRshow
2.000 UL
LTb
5950 2608 M
88 0 V
3285 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 5806 2608 M
[ [(Helvetica) 240.0 0.0 true true 0 (0.08)]
] -80.0 MRshow
2.000 UL
LTb
5950 3121 M
88 0 V
3285 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 5806 3121 M
[ [(Helvetica) 240.0 0.0 true true 0 (0.1)]
] -80.0 MRshow
2.000 UL
LTb
5950 3634 M
88 0 V
3285 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 5806 3634 M
[ [(Helvetica) 240.0 0.0 true true 0 (0.12)]
] -80.0 MRshow
2.000 UL
LTb
5950 4148 M
88 0 V
3285 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 5806 4148 M
[ [(Helvetica) 240.0 0.0 true true 0 (0.14)]
] -80.0 MRshow
2.000 UL
LTb
5950 4661 M
88 0 V
3285 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 5806 4661 M
[ [(Helvetica) 240.0 0.0 true true 0 (0.16)]
] -80.0 MRshow
2.000 UL
LTb
5950 554 M
0 88 V
0 4019 R
0 -88 V
stroke
0.00 0.00 0.00 C 5950 314 M
[ [(Helvetica) 240.0 0.0 true true 0 (0)]
] -80.0 MCshow
2.000 UL
LTb
6717 554 M
0 88 V
0 4019 R
0 -88 V
stroke
0.00 0.00 0.00 C 6717 314 M
[ [(Helvetica) 240.0 0.0 true true 0 (50)]
] -80.0 MCshow
2.000 UL
LTb
7483 554 M
0 88 V
0 4019 R
0 -88 V
stroke
0.00 0.00 0.00 C 7483 314 M
[ [(Helvetica) 240.0 0.0 true true 0 (100)]
] -80.0 MCshow
2.000 UL
LTb
8250 554 M
0 88 V
0 4019 R
0 -88 V
stroke
0.00 0.00 0.00 C 8250 314 M
[ [(Helvetica) 240.0 0.0 true true 0 (150)]
] -80.0 MCshow
2.000 UL
LTb
9016 554 M
0 88 V
0 4019 R
0 -88 V
stroke
0.00 0.00 0.00 C 9016 314 M
[ [(Helvetica) 240.0 0.0 true true 0 (200)]
] -80.0 MCshow
2.000 UL
LTb
2.000 UL
LTb
5950 4661 N
0 -4107 V
3373 0 V
0 4107 V
-3373 0 V
Z stroke
0.00 0.00 0.00 C 4966 2607 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (Stddev normalized by utau2)]
] -80.0 MCshow
grestore
LTb
0.00 0.00 0.00 C 7636 -46 M
[ [(Helvetica) 240.0 0.0 true true 0 (yplus)]
] -80.0 MCshow
LTb
1.000 UP
2.000 UL
LTb
% Begin plot #1
4.000 UL
LT0
0.00 0.00 1.00 C LCb setrgbcolor
8252 4478 M
[ [(Helvetica) 240.0 0.0 true true 0 (std u''u'')]
] -80.0 MRshow
LT0
0.00 0.00 1.00 C 8396 4478 M
639 0 V
5950 554 M
3 3 V
7 23 V
11 77 V
15 175 V
19 384 V
23 516 V
28 611 V
30 295 V
32 362 V
34 250 V
35 168 V
38 126 V
40 110 V
42 98 V
44 69 V
47 11 V
50 -69 V
52 -149 V
55 -197 V
57 -209 V
61 -211 V
63 -214 V
67 -196 V
69 -139 V
73 -88 V
76 -77 V
79 -86 V
82 -77 V
86 -51 V
89 -37 V
91 -18 V
96 23 V
98 52 V
101 215 V
104 52 V
107 -132 V
110 -11 V
112 -21 V
114 -5 V
117 -27 V
118 -102 V
121 -144 V
121 -151 V
123 -142 V
124 -113 V
125 -82 V
125 -86 V
59 -43 V
% End plot #1
% Begin plot #2
stroke
LT0
0.00 0.50 0.00 C LCb setrgbcolor
8252 4238 M
[ [(Helvetica) 240.0 0.0 true true 0 (std v''v'')]
] -80.0 MRshow
LT0
0.00 0.50 0.00 C 8396 4238 M
639 0 V
5950 554 M
3 0 V
7 0 V
11 0 V
15 0 V
19 2 V
23 4 V
28 9 V
30 16 V
32 24 V
34 33 V
35 43 V
38 53 V
40 30 V
42 54 V
44 54 V
47 50 V
50 42 V
52 34 V
55 25 V
57 18 V
61 13 V
63 10 V
67 4 V
69 -66 V
73 -8 V
76 40 V
79 -21 V
82 -21 V
86 -15 V
89 -2 V
91 5 V
96 10 V
98 4 V
101 -5 V
104 -12 V
107 -17 V
110 -20 V
112 -24 V
114 -25 V
117 -19 V
118 -14 V
121 -9 V
121 -9 V
123 -9 V
124 -10 V
125 -9 V
125 -8 V
59 -2 V
% End plot #2
% Begin plot #3
stroke
LT0
1.00 0.00 0.00 C LCb setrgbcolor
8252 3998 M
[ [(Helvetica) 240.0 0.0 true true 0 (std w''w'')]
] -80.0 MRshow
LT0
1.00 0.00 0.00 C 8396 3998 M
639 0 V
5950 554 M
3 1 V
7 9 V
11 24 V
15 47 V
19 69 V
23 85 V
28 96 V
30 92 V
32 88 V
34 88 V
35 84 V
38 75 V
40 61 V
42 49 V
44 39 V
47 36 V
50 44 V
52 59 V
55 148 V
57 -18 V
61 -21 V
63 -30 V
67 -54 V
69 -77 V
73 -85 V
76 -81 V
79 -66 V
82 -45 V
86 -27 V
89 -7 V
91 3 V
96 9 V
98 19 V
101 13 V
104 -7 V
107 -43 V
110 -42 V
112 -12 V
114 -33 V
117 -49 V
118 -93 V
121 -21 V
121 -27 V
123 -35 V
124 36 V
125 4 V
125 -23 V
59 -19 V
% End plot #3
% Begin plot #4
stroke
LT0
0.00 0.75 0.75 C LCb setrgbcolor
8252 3758 M
[ [(Helvetica) 240.0 0.0 true true 0 (std u''v'')]
] -80.0 MRshow
LT0
0.00 0.75 0.75 C 8396 3758 M
639 0 V
5950 554 M
3 0 V
7 0 V
11 1 V
15 3 V
19 11 V
23 25 V
28 45 V
30 60 V
32 63 V
34 55 V
35 38 V
38 20 V
40 6 V
42 -3 V
44 -5 V
47 -7 V
50 -7 V
52 -5 V
55 -2 V
57 1 V
61 4 V
63 4 V
67 5 V
69 6 V
73 7 V
76 9 V
79 12 V
82 15 V
86 11 V
89 6 V
91 4 V
96 8 V
98 8 V
101 6 V
104 5 V
107 -46 V
110 -18 V
112 -15 V
114 -12 V
117 -14 V
118 18 V
121 -55 V
121 12 V
123 -18 V
124 -17 V
125 -15 V
125 -9 V
59 1 V
% End plot #4
% Begin plot #5
stroke
LT0
0.75 0.00 0.75 C LCb setrgbcolor
8252 3518 M
[ [(Helvetica) 240.0 0.0 true true 0 (std k)]
] -80.0 MRshow
LT0
0.75 0.00 0.75 C 8396 3518 M
639 0 V
5950 554 M
3 2 V
7 17 V
11 54 V
15 119 V
19 207 V
23 296 V
28 343 V
30 280 V
32 44 V
34 117 V
35 57 V
38 14 V
40 -6 V
42 -12 V
44 -14 V
47 -30 V
50 -55 V
52 -76 V
55 -34 V
57 -59 V
61 -53 V
63 -85 V
67 -24 V
69 -6 V
73 4 V
76 -10 V
79 -30 V
82 -30 V
86 -15 V
89 -9 V
91 -7 V
96 20 V
98 53 V
101 61 V
104 24 V
107 -25 V
110 -36 V
112 -88 V
114 -38 V
117 49 V
118 -34 V
121 -54 V
121 -74 V
123 -81 V
124 -90 V
125 -63 V
125 -45 V
59 -18 V
% End plot #5
1.000 UP
stroke
2.000 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
