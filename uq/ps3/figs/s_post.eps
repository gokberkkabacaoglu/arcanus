%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.18.4 (http://poppler.freedesktop.org)
%%Creator: matplotlib 1.3.1, http://matplotlib.org
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 527 416
%%HiResBoundingBox: 0 0 526.995313 415.46875
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2004 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq pdfPatternCS not and {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne pdfPatternCS or {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font T3_14_0
8 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-35 -250 1048 750] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 2 dict def
CharProcs begin
/s {
468 0 52 -10 419 442 setcachedevice
q
87 61 m
105 30 141 15 195 15 c
218 15 240 19 261 27 c
282 35 300 47 314 63 c
328 79 335 98 335 121 c
335 138 328 152 316 163 c
304 174 289 182 271 186 c
217 197 l
192 203 172 214 156 231 c
140 248 132 269 132 293 c
132 322 140 348 156 371 c
172 394 193 412 219 424 c
245 436 273 442 302 442 c
332 442 359 434 383 420 c
407 405 419 384 419 356 c
419 340 414 327 406 315 c
397 303 385 298 370 298 c
361 298 353 300 347 306 c
341 312 338 319 338 328 c
338 336 340 343 344 351 c
348 358 354 364 362 368 c
369 372 377 375 385 375 c
379 389 368 399 352 406 c
336 412 318 416 300 416 c
282 416 265 412 249 406 c
232 399 218 389 208 376 c
198 362 193 347 193 329 c
193 317 197 306 205 297 c
213 288 224 282 237 278 c
295 266 l
313 262 330 255 346 245 c
361 235 373 222 382 207 c
391 192 396 175 396 156 c
396 131 389 106 375 82 c
361 58 344 39 324 25 c
288 1 245 -10 194 -10 c
158 -10 126 -2 96 14 c
66 30 52 54 52 86 c
52 104 57 119 67 133 c
77 147 92 154 111 154 c
121 154 130 150 138 144 c
145 137 149 128 149 118 c
149 102 143 89 132 78 c
120 66 107 61 92 61 c
87 61 l
f
Q
} def
/pi {
570 0 24 -10 568 431 setcachedevice
q
101 17 m
101 20 102 25 105 33 c
123 71 141 109 157 147 c
173 184 187 220 200 256 c
213 291 225 329 236 369 c
172 369 l
147 369 124 361 103 346 c
82 330 65 311 51 288 c
49 285 47 284 45 284 c
33 284 l
27 284 24 287 24 294 c
24 295 24 297 26 300 c
48 336 71 367 96 393 c
120 418 148 431 180 431 c
543 431 l
549 431 555 428 560 424 c
565 419 568 413 568 406 c
568 396 564 387 557 380 c
550 372 542 369 532 369 c
405 369 l
394 317 388 266 387 216 c
387 152 398 94 421 42 c
423 38 424 34 424 30 c
424 22 421 15 417 9 c
413 3 407 -1 401 -5 c
394 -8 387 -10 380 -10 c
362 -10 350 4 344 32 c
337 60 334 88 334 115 c
334 153 337 189 344 225 c
350 260 361 308 375 369 c
266 369 l
213 155 181 38 171 16 c
161 -1 148 -10 132 -10 c
124 -10 116 -7 110 -2 c
104 2 101 9 101 17 c
f
Q
} def
end
currentdict end
/T3_14_0 exch definefont pop
%%EndResource
/F14_0 /T3_14_0 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/pi/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%BeginResource: font T3_20_0
8 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-184 -236 1288 929] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 15 dict def
CharProcs begin
/i {
278 0 94 0 184 760 setcachedevice
q
94 547 m
184 547 l
184 0 l
94 0 l
94 547 l
94 760 m
184 760 l
184 646 l
94 646 l
94 760 l
f
Q
} def
/s {
521 0 54 -13 472 560 setcachedevice
q
443 531 m
443 446 l
417 458 391 468 364 475 c
336 481 308 485 279 485 c
234 485 200 478 178 464 c
156 450 145 430 145 403 c
145 382 153 366 169 354 c
185 342 217 330 265 320 c
296 313 l
360 299 405 279 432 255 c
458 230 472 195 472 151 c
472 100 452 60 412 31 c
372 1 316 -13 246 -13 c
216 -13 186 -10 154 -5 c
122 0 89 8 54 20 c
54 113 l
87 95 120 82 152 74 c
184 65 216 61 248 61 c
290 61 323 68 346 82 c
368 96 380 117 380 144 c
380 168 371 187 355 200 c
339 213 303 226 247 238 c
216 245 l
160 257 119 275 95 299 c
70 323 58 356 58 399 c
58 450 76 490 112 518 c
148 546 200 560 268 560 c
301 560 332 557 362 552 c
391 547 418 540 443 531 c
f
Q
} def
/six {
636 0 70 -13 573 742 setcachedevice
q
330 404 m
286 404 251 388 225 358 c
199 328 186 286 186 234 c
186 181 199 139 225 109 c
251 79 286 64 330 64 c
374 64 409 79 435 109 c
461 139 474 181 474 234 c
474 286 461 328 435 358 c
409 388 374 404 330 404 c
526 713 m
526 623 l
501 635 476 644 451 650 c
425 656 400 659 376 659 c
310 659 260 637 226 593 c
192 549 172 482 168 394 c
187 422 211 444 240 459 c
269 474 301 482 336 482 c
409 482 467 459 509 415 c
551 371 573 310 573 234 c
573 159 550 99 506 54 c
462 9 403 -13 330 -13 c
246 -13 181 19 137 83 c
92 147 70 241 70 364 c
70 479 97 571 152 639 c
206 707 280 742 372 742 c
396 742 421 739 447 735 c
472 730 498 723 526 713 c
f
Q
} def
/period {
318 0 107 0 210 124 setcachedevice
q
107 0 103 124 re
f
Q
} def
/o {
612 0 55 -13 557 560 setcachedevice
q
306 484 m
258 484 220 465 192 427 c
164 389 150 338 150 273 c
150 207 163 156 191 118 c
219 80 257 62 306 62 c
354 62 392 80 420 118 c
448 156 462 207 462 273 c
462 337 448 389 420 427 c
392 465 354 484 306 484 c
306 560 m
384 560 445 534 490 484 c
534 433 557 363 557 273 c
557 183 534 113 490 63 c
445 12 384 -13 306 -13 c
227 -13 165 12 121 63 c
77 113 55 183 55 273 c
55 363 77 433 121 484 c
165 534 227 560 306 560 c
f
Q
} def
/one {
636 0 110 0 544 729 setcachedevice
q
124 83 m
285 83 l
285 639 l
110 604 l
110 694 l
284 729 l
383 729 l
383 83 l
544 83 l
544 0 l
124 0 l
124 83 l
f
Q
} def
/four {
636 0 49 0 580 729 setcachedevice
q
378 643 m
129 254 l
378 254 l
378 643 l
352 729 m
476 729 l
476 254 l
580 254 l
580 172 l
476 172 l
476 0 l
378 0 l
378 172 l
49 172 l
49 267 l
352 729 l
f
Q
} def
/P {
603 0 98 0 569 729 setcachedevice
q
197 648 m
197 374 l
321 374 l
367 374 402 385 427 409 c
452 433 465 467 465 511 c
465 555 452 588 427 612 c
402 636 367 648 321 648 c
197 648 l
98 729 m
321 729 l
402 729 464 710 506 673 c
548 636 569 582 569 511 c
569 439 548 384 506 348 c
464 311 402 293 321 293 c
197 293 l
197 0 l
98 0 l
98 729 l
f
Q
} def
/zero {
636 0 66 -13 570 742 setcachedevice
q
318 664 m
267 664 229 639 203 589 c
177 539 165 464 165 364 c
165 264 177 189 203 139 c
229 89 267 64 318 64 c
369 64 407 89 433 139 c
458 189 471 264 471 364 c
471 464 458 539 433 589 c
407 639 369 664 318 664 c
318 742 m
399 742 461 709 505 645 c
548 580 570 486 570 364 c
570 241 548 147 505 83 c
461 19 399 -13 318 -13 c
236 -13 173 19 130 83 c
87 147 66 241 66 364 c
66 486 87 580 130 645 c
173 709 236 742 318 742 c
f
Q
} def
/r {
411 0 91 0 411 560 setcachedevice
q
411 463 m
401 469 390 473 378 476 c
366 478 353 480 339 480 c
288 480 249 463 222 430 c
194 397 181 350 181 288 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
199 495 224 520 254 536 c
284 552 321 560 365 560 c
371 560 378 559 386 559 c
393 558 401 557 411 555 c
411 463 l
f
Q
} def
/five {
636 0 77 -13 549 729 setcachedevice
q
108 729 m
495 729 l
495 646 l
198 646 l
198 467 l
212 472 227 476 241 478 c
255 480 270 482 284 482 c
365 482 429 459 477 415 c
525 370 549 310 549 234 c
549 155 524 94 475 51 c
426 8 357 -13 269 -13 c
238 -13 207 -10 175 -6 c
143 -1 111 6 77 17 c
77 116 l
106 100 136 88 168 80 c
199 72 232 69 267 69 c
323 69 368 83 401 113 c
433 143 450 183 450 234 c
450 284 433 324 401 354 c
368 384 323 399 267 399 c
241 399 214 396 188 390 c
162 384 135 375 108 363 c
108 729 l
f
Q
} def
/two {
636 0 73 0 536 742 setcachedevice
q
192 83 m
536 83 l
536 0 l
73 0 l
73 83 l
110 121 161 173 226 239 c
290 304 331 346 348 365 c
380 400 402 430 414 455 c
426 479 433 504 433 528 c
433 566 419 598 392 622 c
365 646 330 659 286 659 c
255 659 222 653 188 643 c
154 632 117 616 78 594 c
78 694 l
118 710 155 722 189 730 c
223 738 255 742 284 742 c
359 742 419 723 464 685 c
509 647 532 597 532 534 c
532 504 526 475 515 449 c
504 422 484 390 454 354 c
446 344 420 317 376 272 c
332 227 271 164 192 83 c
f
Q
} def
/eight {
636 0 68 -13 568 742 setcachedevice
q
318 346 m
271 346 234 333 207 308 c
180 283 167 249 167 205 c
167 161 180 126 207 101 c
234 76 271 64 318 64 c
364 64 401 76 428 102 c
455 127 469 161 469 205 c
469 249 455 283 429 308 c
402 333 365 346 318 346 c
219 388 m
177 398 144 418 120 447 c
96 476 85 511 85 553 c
85 611 105 657 147 691 c
188 725 245 742 318 742 c
390 742 447 725 489 691 c
530 657 551 611 551 553 c
551 511 539 476 515 447 c
491 418 459 398 417 388 c
464 377 501 355 528 323 c
554 291 568 251 568 205 c
568 134 546 80 503 43 c
459 5 398 -13 318 -13 c
237 -13 175 5 132 43 c
89 80 68 134 68 205 c
68 251 81 291 108 323 c
134 355 171 377 219 388 c
183 544 m
183 506 194 476 218 455 c
242 434 275 424 318 424 c
360 424 393 434 417 455 c
441 476 453 506 453 544 c
453 582 441 611 417 632 c
393 653 360 664 318 664 c
275 664 242 653 218 632 c
194 611 183 582 183 544 c
f
Q
} def
/three {
636 0 76 -13 556 742 setcachedevice
q
406 393 m
453 383 490 362 516 330 c
542 298 556 258 556 212 c
556 140 531 84 482 45 c
432 6 362 -13 271 -13 c
240 -13 208 -10 176 -4 c
144 1 110 10 76 22 c
76 117 l
103 101 133 89 166 81 c
198 73 232 69 268 69 c
330 69 377 81 409 105 c
441 129 458 165 458 212 c
458 254 443 288 413 312 c
383 336 341 349 287 349 c
202 349 l
202 430 l
291 430 l
339 430 376 439 402 459 c
428 478 441 506 441 543 c
441 580 427 609 401 629 c
374 649 336 659 287 659 c
260 659 231 656 200 650 c
169 644 135 635 98 623 c
98 711 l
135 721 170 729 203 734 c
235 739 266 742 296 742 c
370 742 429 725 473 691 c
517 657 539 611 539 553 c
539 513 527 479 504 451 c
481 423 448 403 406 393 c
f
Q
} def
/t {
392 0 27 0 368 702 setcachedevice
q
183 702 m
183 547 l
368 547 l
368 477 l
183 477 l
183 180 l
183 135 189 106 201 94 c
213 81 238 75 276 75 c
368 75 l
368 0 l
276 0 l
206 0 158 13 132 39 c
106 65 93 112 93 180 c
93 477 l
27 477 l
27 547 l
93 547 l
93 702 l
183 702 l
f
Q
} def
end
currentdict end
/T3_20_0 exch definefont pop
%%EndResource
/F20_0 /T3_20_0 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%BeginResource: font T3_39_0
8 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-44 -250 1009 750] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 2 dict def
CharProcs begin
/parenright {
388 0 56 -249 291 750 setcachedevice
q
65 -249 m
59 -249 56 -246 56 -240 c
56 -237 56 -235 58 -234 c
172 -122 229 38 229 250 c
229 462 172 623 60 733 c
57 734 56 737 56 741 c
56 743 57 745 59 747 c
61 749 63 750 65 750 c
74 750 l
76 750 77 749 79 748 c
127 710 167 664 199 610 c
231 556 254 498 269 437 c
283 376 291 314 291 250 c
291 202 287 156 279 110 c
271 64 258 20 241 -24 c
223 -68 201 -108 175 -146 c
148 -184 116 -217 79 -247 c
77 -248 76 -249 74 -249 c
65 -249 l
f
Q
} def
/parenleft {
388 0 97 -249 332 750 setcachedevice
q
310 -247 m
272 -217 240 -184 214 -146 c
187 -108 165 -67 148 -25 c
131 17 118 62 110 109 c
101 155 97 202 97 250 c
97 298 101 345 110 392 c
118 438 131 483 149 527 c
166 570 188 611 215 649 c
242 687 274 720 310 748 c
310 749 311 750 315 750 c
324 750 l
326 750 327 749 329 747 c
331 745 332 743 332 741 c
332 738 331 736 330 735 c
297 703 270 668 248 632 c
226 596 209 557 196 516 c
183 474 174 432 168 388 c
162 344 159 298 159 250 c
159 38 215 -122 329 -232 c
331 -234 332 -236 332 -240 c
332 -242 331 -244 329 -246 c
327 -248 326 -249 324 -249 c
315 -249 l
311 -249 310 -248 310 -247 c
f
Q
} def
end
currentdict end
/T3_39_0 exch definefont pop
%%EndResource
/F39_0 /T3_39_0 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
1 j
/DeviceGray {} cs
[1] sc
0 w
/DeviceGray {} CS
[1] SC
0 0 526.995313 415.46875 re
f
/DeviceGray {} CS
[0] SC
60.809375 56.85625 446.4 345.6 re
f
q
60.809375 56.85625 446.4 345.6 re
W
2 J
3 w
/DeviceRGB {} CS
[0 0 1] SC
112.385701 57.233855 m
116.340436 57.441167 l
120.29517 57.890167 l
122.272537 58.271882 l
124.249904 58.786139 l
126.227271 59.43759 l
130.182006 61.069229 l
136.114107 63.623263 l
142.046209 65.863832 l
144.023576 66.832692 l
146.000943 68.073827 l
147.97831 69.634265 l
149.955678 71.503245 l
151.933045 73.621779 l
155.887779 78.293097 l
161.819881 85.783681 l
165.774615 91.272165 l
167.751982 94.292963 l
169.729349 97.588388 l
171.706716 101.261311 l
173.684084 105.441991 l
175.661451 110.271088 l
177.638818 115.8724 l
179.616185 122.323763 l
181.593552 129.635118 l
183.570919 137.740731 l
187.525654 155.764751 l
197.41249 203.089431 l
199.389857 211.582791 l
201.367224 219.393277 l
203.344591 226.455455 l
205.321958 232.803612 l
207.299326 238.572542 l
215.208794 260.175592 l
217.186161 266.238564 l
219.163529 272.889357 l
221.140896 280.215816 l
223.118263 288.210966 l
233.005099 330.517066 l
234.982466 337.883882 l
236.959833 344.790491 l
238.9372 351.23515 l
240.914568 357.076804 l
242.891935 362.054601 l
244.869302 365.91594 l
246.846669 368.588853 l
248.824036 370.301535 l
250.801403 371.574819 l
252.778771 373.07704 l
254.756138 375.39789 l
256.733505 378.834602 l
258.710872 383.276784 l
262.665606 392.994426 l
264.642974 396.848477 l
266.620341 399.295347 l
268.597708 400.150659 l
270.575075 399.527014 l
272.552442 397.713188 l
274.52981 395.021369 l
276.507177 391.675591 l
278.484544 387.780626 l
280.461911 383.361937 l
282.439278 378.433481 l
284.416645 373.047322 l
288.37138 361.313456 l
294.303481 342.568847 l
298.258216 329.157772 l
302.21295 314.342854 l
308.145051 290.598519 l
310.122419 283.266876 l
312.099786 276.70069 l
314.077153 271.048809 l
316.05452 266.314148 l
318.031887 262.366135 l
320.009255 258.975842 l
323.963989 252.673029 l
325.941356 249.102862 l
327.918723 244.825676 l
329.89609 239.579847 l
331.873458 233.205151 l
333.850825 225.687689 l
335.828192 217.185818 l
343.737661 180.769941 l
345.715028 172.927655 l
347.692395 165.953888 l
349.669762 159.794081 l
351.647129 154.312915 l
353.624497 149.341605 l
357.579231 140.303817 l
361.533965 131.880572 l
365.4887 124.153091 l
367.466067 120.685189 l
371.420801 114.481801 l
377.352903 105.580915 l
383.285004 96.281206 l
385.262371 93.402558 l
387.239738 90.761199 l
389.217106 88.379907 l
391.194473 86.247722 l
393.17184 84.337001 l
395.149207 82.618822 l
399.103942 79.654384 l
407.01341 74.353658 l
416.900246 67.095331 l
418.877613 65.97668 l
420.85498 65.032144 l
422.832348 64.240651 l
426.787082 63.018521 l
430.741816 62.198587 l
434.696551 61.717687 l
440.628652 61.106502 l
444.583387 60.418018 l
454.470222 58.316928 l
458.424957 57.729358 l
462.379691 57.3775 l
468.311793 57.168448 l
478.198629 57.068856 l
482.153363 57.190514 l
488.085464 57.662738 l
494.017566 58.153728 l
497.9723 58.264645 l
501.927035 58.164596 l
505.881769 57.898338 l
505.881769 57.898338 l
S
Q
q
60.809375 56.85625 446.4 345.6 re
W
2 J
3 w
/DeviceRGB {} CS
[0 0.5 0] SC
112.385701 57.833754 m
505.881769 57.833754 l
505.881769 57.833754 l
S
Q
q
/DeviceGray {} cs
[0] sc
0.5 w
/DeviceGray {} CS
[0] SC
60.809375 56.85625 m
60.809375 60.85625 l
f
60.809375 56.85625 m
60.809375 60.85625 l
S
60.809375 402.45625 m
60.809375 398.45625 l
f
60.809375 402.45625 m
60.809375 398.45625 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
48.442187 43.73125 Td
/F20_0 12 Tf
(0.22) 26.712 Tj
0.5 w
124.580804 56.85625 m
124.580804 60.85625 l
f
124.580804 56.85625 m
124.580804 60.85625 l
S
124.580804 402.45625 m
124.580804 398.45625 l
f
124.580804 402.45625 m
124.580804 398.45625 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
111.947991 43.73125 Td
/F20_0 12 Tf
(0.24) 26.712 Tj
0.5 w
188.352232 56.85625 m
188.352232 60.85625 l
f
188.352232 56.85625 m
188.352232 60.85625 l
S
188.352232 402.45625 m
188.352232 398.45625 l
f
188.352232 402.45625 m
188.352232 398.45625 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
175.766295 43.73125 Td
/F20_0 12 Tf
(0.26) 26.712 Tj
0.5 w
252.123661 56.85625 m
252.123661 60.85625 l
f
252.123661 56.85625 m
252.123661 60.85625 l
S
252.123661 402.45625 m
252.123661 398.45625 l
f
252.123661 402.45625 m
252.123661 398.45625 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
239.568973 43.73125 Td
/F20_0 12 Tf
(0.28) 26.712 Tj
0.5 w
315.895089 56.85625 m
315.895089 60.85625 l
f
315.895089 56.85625 m
315.895089 60.85625 l
S
315.895089 402.45625 m
315.895089 398.45625 l
f
315.895089 402.45625 m
315.895089 398.45625 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
303.324777 43.73125 Td
/F20_0 12 Tf
(0.30) 26.712 Tj
0.5 w
379.666518 56.85625 m
379.666518 60.85625 l
f
379.666518 56.85625 m
379.666518 60.85625 l
S
379.666518 402.45625 m
379.666518 398.45625 l
f
379.666518 402.45625 m
379.666518 398.45625 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
367.29933 43.73125 Td
/F20_0 12 Tf
(0.32) 26.712 Tj
0.5 w
443.437946 56.85625 m
443.437946 60.85625 l
f
443.437946 56.85625 m
443.437946 60.85625 l
S
443.437946 402.45625 m
443.437946 398.45625 l
f
443.437946 402.45625 m
443.437946 398.45625 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
430.805134 43.73125 Td
/F20_0 12 Tf
(0.34) 26.712 Tj
0.5 w
507.209375 56.85625 m
507.209375 60.85625 l
f
507.209375 56.85625 m
507.209375 60.85625 l
S
507.209375 402.45625 m
507.209375 398.45625 l
f
507.209375 402.45625 m
507.209375 398.45625 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
494.623437 43.73125 Td
/F20_0 12 Tf
(0.36) 26.712 Tj
[1 0 0 1 0 0] Tm
0 0 Td
277.735937 13.434375 Td
/F20_0 30 Tf
(s) 15.63 Tj
0.5 w
60.809375 56.85625 m
64.809375 56.85625 l
f
60.809375 56.85625 m
64.809375 56.85625 l
S
507.209375 56.85625 m
503.209375 56.85625 l
f
507.209375 56.85625 m
503.209375 56.85625 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
50.7625 53.54375 Td
/F20_0 12 Tf
(0) 7.632 Tj
0.5 w
60.809375 125.97625 m
64.809375 125.97625 l
f
60.809375 125.97625 m
64.809375 125.97625 l
S
507.209375 125.97625 m
503.209375 125.97625 l
f
507.209375 125.97625 m
503.209375 125.97625 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
51.1375 122.66375 Td
/F20_0 12 Tf
(5) 7.632 Tj
0.5 w
60.809375 195.09625 m
64.809375 195.09625 l
f
60.809375 195.09625 m
64.809375 195.09625 l
S
507.209375 195.09625 m
503.209375 195.09625 l
f
507.209375 195.09625 m
503.209375 195.09625 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
43.6375 191.78375 Td
/F20_0 12 Tf
(10) 15.264 Tj
0.5 w
60.809375 264.21625 m
64.809375 264.21625 l
f
60.809375 264.21625 m
64.809375 264.21625 l
S
507.209375 264.21625 m
503.209375 264.21625 l
f
507.209375 264.21625 m
503.209375 264.21625 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
43.8875 260.90375 Td
/F20_0 12 Tf
(15) 15.264 Tj
0.5 w
60.809375 333.33625 m
64.809375 333.33625 l
f
60.809375 333.33625 m
64.809375 333.33625 l
S
507.209375 333.33625 m
503.209375 333.33625 l
f
507.209375 333.33625 m
503.209375 333.33625 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
43.2 330.02375 Td
/F20_0 12 Tf
(20) 15.264 Tj
0.5 w
60.809375 402.45625 m
64.809375 402.45625 l
f
60.809375 402.45625 m
64.809375 402.45625 l
S
507.209375 402.45625 m
503.209375 402.45625 l
f
507.209375 402.45625 m
503.209375 402.45625 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
43.45 399.14375 Td
/F20_0 12 Tf
(25) 15.264 Tj
q
[0 1 -1 0 30.2 202.15625] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0.5 Td
/F14_0 30 Tf
(\274) 17.1 Tj
17.094727 0.5 Td
/F39_0 30 Tf
(\() 11.64 Tj
28.740234 0.5 Td
/F14_0 30 Tf
(s) 14.04 Tj
42.773438 0.5 Td
/F39_0 30 Tf
(\)) 11.64 Tj
Q
60.809375 402.45625 m
507.209375 402.45625 l
S
507.209375 56.85625 m
507.209375 402.45625 l
S
60.809375 56.85625 m
507.209375 56.85625 l
S
60.809375 56.85625 m
60.809375 402.45625 l
S
/DeviceGray {} cs
[1] sc
68.009375 349.4425 83.465 45.81375 re
f
68.009375 349.4425 83.465 45.81375 re
S
2 J
3 w
/DeviceRGB {} CS
[0 0 1] SC
78.089375 383.895625 m
98.249375 383.895625 l
S
0 J
/DeviceGray {} cs
[0] sc
1 w
/DeviceGray {} CS
[0] SC
[1 0 0 1 0 0] Tm
0 0 Td
114.089375 378.855625 Td
/F20_0 14.4 Tf
(Post) 30.6432 Tj
2 J
3 w
/DeviceRGB {} CS
[0 0.5 0] SC
78.089375 363.14875 m
98.249375 363.14875 l
S
0 J
/DeviceGray {} cs
[0] sc
1 w
/DeviceGray {} CS
[0] SC
[1 0 0 1 0 0] Tm
0 0 Td
114.089375 358.10875 Td
/F20_0 14.4 Tf
(Prior) 33.336 Tj
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font T3_14_0
%%+ font T3_20_0
%%+ font T3_39_0
%%EOF
